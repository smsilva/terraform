#!/bin/bash
export PATH=${PWD}/../scripts/:${PATH}

VARIABLES_DIRECTORY="$1"
TARGET_DIRECTORY="$2"

sudo rm -rf "${TARGET_DIRECTORY?}"
mkdir -p "${TARGET_DIRECTORY?}"

custom_image_name() {
  FILE_NAME=$(basename "$1")
  echo "${FILE_NAME%.tfvars}"
}

while read -r TFVARS_FILE_NAME; do
  CUSTOM_IMAGE_NAME=$(custom_image_name "${TFVARS_FILE_NAME?}")
  CUSTOM_IMAGE_DIRECTORY="${TARGET_DIRECTORY?}/${CUSTOM_IMAGE_NAME?}"
  mkdir -p "${CUSTOM_IMAGE_DIRECTORY}"

  # Copy tfvars file
  cp "${TFVARS_FILE_NAME?}" "${CUSTOM_IMAGE_DIRECTORY?}/terraform.tfvars"

  # Retrieve some variables from tfvars file and export each one as Environment Variables
  generate-terraform-variables-conf-from "${TFVARS_FILE_NAME?}" && \
    mv terraform-variables.conf "${CUSTOM_IMAGE_DIRECTORY?}/build.conf" && \
    source "${CUSTOM_IMAGE_DIRECTORY?}/build.conf"

  # Evaluate Backend Configuration Template
  export BACKEND_KEY="${ENVIRONMENT_NAME?}"
  export BACKEND_STORAGE_ACCOUNT_NAME="${ARM_STORAGE_ACCOUNT_NAME?}"
  export BACKEND_CONTAINER_NAME="${BACKEND_CONTAINER_NAME-terraform}"
  envsubst < templates/backend.conf > "${CUSTOM_IMAGE_DIRECTORY?}/backend.conf"

  # Evaluate Dockerfile Template
  envsubst < templates/Dockerfile > "${CUSTOM_IMAGE_DIRECTORY?}/Dockerfile"

  # Evaluate Azure Resource Manager Template
  envsubst < templates/azurerm.conf > "${CUSTOM_IMAGE_DIRECTORY?}/azurerm.conf"

  # Log
  echo "[image: ${STACK_NAME?}:${STACK_VERSION?}] ${CUSTOM_IMAGE_DIRECTORY?} created."
done <<< "$(find "${VARIABLES_DIRECTORY?}" -type f -name "*.tfvars")"

echo ""
