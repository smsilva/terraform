#!/bin/sh
TERRAFORM_COMMAND="$@"
TERRAFORM_VERSION=$(terraform --version | head -1 | awk '{ print $2 }')
TERRAFORM_PLAN_FILE="/stack/output/terraform.plan"

# Configure Backend to Azure Resource Manager
sed -i '/backend.*local/ s/local/azurerm/' /stack/provider.tf

# Load Stack Settings
. /stack/stack.conf

cat <<EOF > terraform.auto.tfvars
environment_name="${ENVIRONMENT_NAME}"
EOF

if [ -n "${ENVIRONMENT_REGION}" ]; then
  echo "region=\"${ENVIRONMENT_REGION}\"" >> terraform.auto.tfvars
fi

if [ "${DEBUG-0}" != "0" ]; then
  echo ""
  echo "Stack configuration"
  echo ""
  echo "  name...................: ${STACK_NAME}"
  echo "  version................: ${STACK_VERSION}"
  echo "  terraform_version......: ${TERRAFORM_VERSION}"
  echo "  environment_name.......: ${ENVIRONMENT_NAME}"

  if [ -n "${ENVIRONMENT_REGION}" ]; then
    echo "  environment_region.....: ${ENVIRONMENT_REGION}"
  fi
fi

while read -r LINE; do
  export "${LINE}"
done < /stack/backend.conf

if [ "${DEBUG-0}" != "0" ]; then
  echo ""
  echo "Backend configuration"
  echo ""
  echo "  storage_account_name...: ${storage_account_name}"
  echo "  container_name.........: ${container_name}"
  echo "  key....................: ${key?}"
  echo ""

  terraform init \
    -reconfigure \
    -upgrade=false \
    -backend-config=backend.conf

  echo ""
else
  terraform init \
    -reconfigure \
    -upgrade=false \
    -no-color \
    -backend-config=backend.conf > /stack/output/init.tf
fi

if [ "${TERRAFORM_COMMAND}" == "plan" ] || [ -z "${TERRAFORM_COMMAND}" ]; then
  terraform plan \
    -lock-timeout=300s \
    -out ${TERRAFORM_PLAN_FILE?}

  exit 0
fi

if [ "${TERRAFORM_COMMAND}" == "apply" ]; then
  terraform apply \
    -auto-approve ${TERRAFORM_PLAN_FILE?}

  terraform apply \
     -auto-approve \
     -refresh-only

  exit 0
fi

terraform "$@"
