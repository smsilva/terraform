#!/bin/sh
TERRAFORM_COMMAND="${1-plan}"
TERRAFORM_VERSION=$(terraform --version | head -1 | awk '{ print $2 }')
TERRAFORM_PLAN_FILE="/stack/output/terraform.plan"

# Configure Backend to Azure Resource Manager
sed -i '/backend.*local/ s/local/azurerm/'  /stack/provider.tf

# Load Stack Settings
. /stack/stack.conf

export BACKEND_KEY="${ENVIRONMENT_NAME?}"

TERRAFORM_STATE_FILE="${STACK_NAME?}-${BACKEND_KEY}.tfstate.json"

cat <<EOF > terraform.auto.tfvars
environment_name="${ENVIRONMENT_NAME}"
EOF

echo ""
echo "Stack configuration"
echo ""
echo "  name...................: ${STACK_NAME}"
echo "  version................: ${STACK_VERSION}"
echo "  terraform_version......: ${TERRAFORM_VERSION}"
echo "  environment_name.......: ${ENVIRONMENT_NAME}"

if [ ! -z "${ENVIRONMENT_REGION}" ]; then
  echo "region=\"${ENVIRONMENT_REGION}\"" >> terraform.auto.tfvars
echo "  environment_region.....: ${ENVIRONMENT_REGION}"
fi

echo ""
echo "Backend configuration"
echo ""
echo "  resource_group_name....: ${BACKEND_RESOURCE_GROUP_NAME}"
echo "  storage_account_name...: ${BACKEND_STORAGE_ACCOUNT_NAME}"
echo "  container_name.........: ${BACKEND_CONTAINER_NAME}"
echo "  key....................: ${BACKEND_KEY?}"
echo "  state_file.............: ${TERRAFORM_STATE_FILE?}"
echo ""

terraform init \
  -reconfigure \
  -upgrade=false \
  -backend-config="resource_group_name=${BACKEND_RESOURCE_GROUP_NAME}" \
  -backend-config="storage_account_name=${BACKEND_STORAGE_ACCOUNT_NAME}" \
  -backend-config="container_name=${BACKEND_CONTAINER_NAME}" \
  -backend-config="key=${TERRAFORM_STATE_FILE?}"

echo ""

if [ "${TERRAFORM_COMMAND}" == "apply" ]; then
  terraform apply -auto-approve ${TERRAFORM_PLAN_FILE?}
  terraform apply -auto-approve -refresh-only
fi

if [ "${TERRAFORM_COMMAND}" == "plan" ]; then
  terraform plan -out ${TERRAFORM_PLAN_FILE?}
fi

if [ "${TERRAFORM_COMMAND}" == "destroy" ]; then
  terraform destroy -auto-approve
fi

echo ""
