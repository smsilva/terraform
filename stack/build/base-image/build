#!/bin/bash
set -e

export PATH=${PWD}/../scripts/:${PATH}
export SOURCE_DIRECTORY="${1-../../src}"
export PROVIDER_FILE="${SOURCE_DIRECTORY}/provider.tf"
export TERRAFORM_VARIABLES_FILE="${SOURCE_DIRECTORY}/terraform.tfvars"
export BUILD_CONFIGURATION_FILE="${SOURCE_DIRECTORY}/build.conf"

# Execute validations on input parameters
./validate-input-parameters

# Copy the entire Source Code Directory to a src local folder
./copy-source-code-from "${SOURCE_DIRECTORY?}"

# Read Stack Build Configuration
source "${BUILD_CONFIGURATION_FILE?}"

# Export Terraform Version to be used with Templates
export TERRAFORM_VERSION=${TERRAFORM_VERSION?}

# Retrieve some variables from tfvars file and export each one as an Environment Variable
generate-terraform-variables-conf-from "${TERRAFORM_VARIABLES_FILE?}" && \
  source terraform-variables.conf

# Show Loaded Build Settings
./show-build-settings

# Generate stack.conf file
envsubst < templates/stack.conf > stack.conf

# Generate Dockerfile
envsubst < templates/Dockerfile > Dockerfile

# Generate Azure Resource Manager Variables file
envsubst < templates/azurerm.conf > azurerm.conf

# Copy ssh_key to access Git Repository and download Modules if needed
cp -R "${HOME?}/.ssh" . && echo ""

# Build Docker Image
docker build -t ${STACK_NAME?}:${STACK_VERSION?} . && echo ""

# Clear File System
rm -rf .ssh
rm -rf Dockerfile
rm -rf azurerm.conf
rm -rf stack.conf
rm -rf terraform-variables.conf
rm -rf src/

# Clear Intermediate Docker Images
docker system prune -f > /dev/null

# List Created Image
docker images | grep -E "REPOSITORY|${STACK_NAME?}.*${STACK_VERSION?}"
